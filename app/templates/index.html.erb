<!doctype html>
<html lang="en">
  <head><title>WebSockets Test</title></head>
  <script>
      function initWs(cb) {
          const ws = new WebSocket("ws://<%= local_ip %>:9292/ws")
          ws.onerror = (e) => console.log(e)
          ws.onclose = (e) => console.log(e)
          ws.onopen = (e) => console.log(e)
          ws.onmessage = (e) => {
              console.log(e.data)
              cb(e.data)
          }
          return ws
      }

      function formatDate() {
          const date = new Date()
          return `${date.toLocaleDateString("en-CA")} ${date.toLocaleTimeString("en-GB")}`
      }

      function clearAndFocusField(field) {
          field.value = ""
          field.focus()
      }

      function ready() {
          const messageLog = document.getElementById("messages")
          const messageInput = document.getElementById("message")
          const sendMessageButton = document.getElementById("send-message")
          const closeConnectionButton = document.getElementById("close-connection")
          const reopenConnectionButton = document.getElementById("reopen-connection")

          let ws = initWs(logMessage)
          clearAndFocusField(messageInput)

          document.addEventListener("keydown", event => {
              if (event.key === "Enter") {
                  sendMessageButton.click()
              }
          })


          sendMessageButton.addEventListener("click", (event) => {
              event.preventDefault()
              event.stopPropagation()
              ws.send(messageInput.value)
              clearAndFocusField(messageInput)
          })

          function logMessage(message) {
              const el = document.createElement("p")
              el.innerText = `${formatDate()}: ${message}`
              messageLog.appendChild(el)
          }

          closeConnectionButton.addEventListener("click", (event) => {
              event.preventDefault()
              event.stopPropagation()
              console.log("Closing connection")
              ws.close(1000, "It's fine. We said it's fine.")
          })

          reopenConnectionButton.addEventListener("click", (event) => {
              event.preventDefault()
              event.stopPropagation()
              console.log("Reopening connection")
              ws = initWs(logMessage)
          })
      }

      document.addEventListener("DOMContentLoaded", ready)

  </script>
  <body>
    <h1>WebSockets test</h1>
    <div style="height: 500px; overflow-y: auto; background: #eee">
      <h2>Log</h2>
      <div id="messages"></div>
    </div>
    <div style="margin-top: 50px;">
      <input type="text" name="message" id="message" placeholder="Type message here..." />
      <button type="button" id="send-message">Send message</button>
    </div>
    <div style="margin-top: 50px;">
      <button type="button" id="close-connection">Close connection</button>
      <button type="button" id="reopen-connection">Reopen connection</button>
    </div>
  </body>
</html>
